{"ast":null,"code":"var _jsxFileName = \"/Users/ssabi/Desktop/React Practice/todo-app/src/App.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '리액트의 기초 알아보기',\n    checked: true\n  }, {\n    id: 2,\n    text: '컴포넌트 스타일링해 보기',\n    checked: true\n  }, {\n    id: 3,\n    text: '일정 관리 앱 만들어 보기',\n    checked: false\n  }]); // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n\n  const nextId = useRef(4);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1; // nextId 1씩 더하기\n  }, [todos]);\n  const onRemove = useCallback(id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }, [todos]);\n  const onToggle = useCallback(id => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      checked: !todo.checked\n    } : todo));\n  }, [todos]);\n  return /*#__PURE__*/React.createElement(TodoTemplate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoInsert, {\n    onInsert: onInsert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ssabi/Desktop/React Practice/todo-app/src/App.js"],"names":["React","useState","useRef","useCallback","TodoTemplate","TodoInsert","TodoList","App","todos","setTodos","id","text","checked","nextId","onInsert","todo","current","concat","onRemove","filter","onToggle","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AACES,IAAAA,EAAE,EAAC,CADL;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAC,CADL;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANiC,EAWjC;AACEF,IAAAA,EAAE,EAAC,CADL;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAXiC,CAAD,CAAlC,CADc,CAmBd;AACA;;AACA,QAAMC,MAAM,GAAGX,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMY,QAAQ,GAAGX,WAAW,CAC1BQ,IAAI,IAAI;AACN,UAAMI,IAAI,GAAG;AACXL,MAAAA,EAAE,EAACG,MAAM,CAACG,OADC;AAEXL,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMAH,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAF,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB,CARM,CAQe;AACtB,GAVyB,EAW1B,CAACR,KAAD,CAX0B,CAA5B;AAcA,QAAMU,QAAQ,GAAGf,WAAW,CAC1BO,EAAE,IAAG;AACHD,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaJ,IAAI,IAAGA,IAAI,CAACL,EAAL,KAAYA,EAAhC,CAAD,CAAR;AACD,GAHyB,EAI1B,CAACF,KAAD,CAJ0B,CAA5B;AAOA,QAAMY,QAAQ,GAAGjB,WAAW,CACvBO,EAAD,IAAQ;AACJD,IAAAA,QAAQ,CACJD,KAAK,CAACa,GAAN,CAAWN,IAAD,IACNA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGK,IAAL;AAAWH,MAAAA,OAAO,EAAE,CAACG,IAAI,CAACH;AAA1B,KAAjB,GAAuDG,IAD3D,CADI,CAAR;AAKH,GAPuB,EAQxB,CAACP,KAAD,CARwB,CAA5B;AAWA,sBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEM,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAwB,IAAA,QAAQ,EAAEU,QAAlC;AAA4C,IAAA,QAAQ,EAAEE,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CA7DD;;AA+DA,eAAeb,GAAf","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n    const [todos, setTodos] = useState([\n      {\n        id:1,\n        text: '리액트의 기초 알아보기',\n        checked: true,\n      },\n      {\n        id:2,\n        text: '컴포넌트 스타일링해 보기',\n        checked: true,\n      },\n      {\n        id:3,\n        text: '일정 관리 앱 만들어 보기',\n        checked: false,\n      },\n    ]);\n\n    // 고윳값으로 사용될 id\n    // ref를 사용하여 변수 담기\n    const nextId = useRef(4)  ;\n\n    const onInsert = useCallback(\n      text => {\n        const todo = {\n          id:nextId.current,\n          text,\n          checked: false,\n        }\n        \n        setTodos(todos.concat(todo));\n        nextId.current += 1; // nextId 1씩 더하기\n      },\n      [todos],\n    );\n\n    const onRemove = useCallback(\n      id =>{\n        setTodos(todos.filter(todo=> todo.id !== id));\n      },\n      [todos],\n    )\n\n    const onToggle = useCallback(\n        (id) => {\n            setTodos(\n                todos.map((todo) =>\n                    todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n                ),\n            );\n        },\n        [todos],\n    );\n\n    return (\n        <TodoTemplate>\n            <TodoInsert onInsert={onInsert} />\n            <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n        </TodoTemplate>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}